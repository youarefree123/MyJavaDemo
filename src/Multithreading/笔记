java VM 启动的时候会有一个进程java.exe
该进程中至少有一个线程负责java程序的执行，
而且这个线程运行的代码存放于main方法中，
该线程称之为主线程

扩展：其实更细节说明VM，不止一个线程，还有负责垃圾回收的线程

java提供了对线程的对象描述，并进行封装，名为Thread类
并重写它的run方法
1:定义一个类继承Thread类
2：复写Thread类中的run方法
3：调用线程的start方法(启动线程，调用run方法)
多线程存在随机性，由cpu说的算（没有特殊操作的情况下）

为什么要覆盖run方法？
    Thread类中的run方法用于存储要运行的代码

使用同步代码块或者同步方法实现保证线程安全有两个前提：
 1：该程序含有两个及两个以上的线程
 2：sychronnized 的锁需要的同一个锁（及用到的对象是同一个对象）

 如果同步函数被静态修饰以后,锁不再是this,而是该方法所在类的字节码文件.
 静态进内存时，内存没有本类对象，但一定又该类对象所对应的字节码文件对象，
 类名.class，该对象 的类型是class

 线程间通讯：
 其实就是多个线程在操作同一个资源
 但是操作的动作不同
